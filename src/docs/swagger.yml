openapi: 3.0.0
info:
  version: '1.1.0'
  termsOfService: 'http://swagger.io/terms/'
  title: Challenger MELI API
  license:
    name: ISC
  contact:
    name: Maxi
    email: maximilianoraulguerrero@gmail.com
paths:
  '/products/{site}':
    get:
      tags:
        - Mercado Libre
      security:
        - ApiKeyAuth: []
      summary: Get all products of Mercado Libre by a site
      description: Get all products of Mercado Libre by a site
      operationId: getProducts
      parameters:
        - $ref: '#/components/parameters/site'
        - $ref: '#/components/parameters/sort'
        - $ref: '#/components/parameters/sort_dir'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/query'
      responses:
        '200':
          $ref: '#/components/responses/GetProductsMeli'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/product/{id}':
    get:
      tags:
        - Mercado Libre
      security:
        - ApiKeyAuth: []
      summary: Get a details product of Mercado Libre by id
      description: Get a details product of Mercado Libre by id
      operationId: getProductById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/GetProductMeliById'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
servers:
  - url: https://api.example.com/v1
    description: Default
components:
  responses:
    Success:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardResponse'
    Unauthorized:
      description: Access token is missing or is invalid
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
    GetProductsMeli:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetProductsResponse'
    GetProductMeliById:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProductById'
  schemas:
    StandardResponse:
      type: object
      properties:
        message:
          type: string
          example: Successful operation
        status:
          type: number
          example: 200
    Error:
      type: object
      properties:
        message:
          type: string
          example: error
    GetProductsResponse:
      type: object
      properties:
        paging:
          type: object
          properties:
            total:
              type: number
              example: 20
            offset:
              type: number
              example: 1
            limit:
              type: number
              example: 5
        categories:
          type: array
          items:
            type: string
            example: 'Electrodomesticos'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Author:
      type: object
      properties:
        name:
          type: string
          example: name
        lastname:
          type: string
          example: name
    Product:
      type: object
      properties:
        id:
          type: string
          example: '1'
        title:
          type: string
          example: 'Cafe'
        price:
          type: object
          properties:
            currency:
              type: string
              example: ARS
            amount:
              type: number
              example: 1
            decimals:
              type: number
              example: 30.2
        picture:
          type: string
          example: 'http://image-url.com'
        condition:
          type: string
          example: 'new'
        free_shipping:
          type: boolean
          example: true
    ProductById:
      type: object
      properties:
        author:
          $ref: '#/components/schemas/Author'
        item:
          allOf:
            - $ref: '#/components/schemas/Product'
            - type: object
              properties:
                sold_quantity:
                  type: number
                  example: 1
                description:
                  type: string
                  example: Is a description
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-auth-token
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
    site:
      name: site
      in: path
      required: true
      description: Sites of mercado Libre
      schema:
        type: string
        enum:
          - MLA
          - MLB
          - MLM
    sort:
      name: sort
      in: query
      description: Attribute to sort by
      schema:
        type: string
        default: price
        enum:
          - price
    sort_dir:
      name: sort_dir
      in: query
      description: Sorting direction
      schema:
        type: string
        default: asc
        enum:
          - asc
          - desc
    offset:
      name: offset
      in: query
      schema:
        type: number
        default: 0
        minimum: 0
    limit:
      name: limit
      in: query
      schema:
        type: number
        maximum: 50
        minimum: 1
        default: 50
    query:
      name: query
      in: query
      schema:
        type: string
        default: ':query'
